const { Client, LocalAuth } = require("whatsapp-web.js");
const qrcode = require("qrcode");
const fs = require("fs");
const path = require("path");
const express = require("express");
const dotenv = require("dotenv");
const fetch = require("node-fetch");
const FormData = require("form-data");

dotenv.config();

const app = express();
const port = process.env.PORT || 3000; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å—Ä–µ–¥—ã –¥–ª—è –ø–æ—Ä—Ç–∞ (–¥–ª—è Railway)

const qrFilePath = path.join(__dirname, "qr.png");

// WhatsApp Web –∫–ª–∏–µ–Ω—Ç
const client = new Client({
  authStrategy: new LocalAuth(),
  puppeteer: {
    headless: true,
    args: ["--no-sandbox", "--disable-setuid-sandbox"],
  },
});

// Telegram bot
const TELEGRAM_BOT_TOKEN = process.env.BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞ —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
const generateQR = async () => {
  try {
    console.log("‚úÖ QR-–∫–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω");
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR:", err);
  }
};

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ QR-–∫–æ–¥–∞
app.get("/qr", (req, res) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
  if (fs.existsSync(qrFilePath)) {
    res.sendFile(qrFilePath); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  } else {
    res
      .status(404)
      .send("‚ùå QR-–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –µ–≥–æ –Ω—É–∂–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å.");
  }
});

// –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ QR –≤ Telegram
client.on("qr", async (qr) => {
  try {
    await qrcode.toFile(qrFilePath, qr); // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ QR –≤ Telegram:", err.message);
  }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WhatsApp Web –∫–ª–∏–µ–Ω—Ç–∞
client.on("ready", () => {
  console.log("‚úÖ WhatsApp client is ready!");
  generateQR(); // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞
});

// –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
client.on("message", async (message) => {
  console.log("üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", message.body);

  const phone = message.from.split("@")[0];
  const name = message.author || phone;
  const str = message.body.trim().split(" ");
  const preResStr = str[str.length - 1];
  const session = (preResStr.split("_")[1] || "").trim();

  try {
    const res = await fetch(
      `${process.env.API_URI}/compare-data/${phone}/${session}/${name}`
    );
    if (res.ok) {
      await message.reply("Hello, our manager will contact you soon");
    }
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API:", err.message);
  }
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä Express
app.listen(port, () => {
  console.log(`QR-–∫–æ–¥ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${port}`);
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ WhatsApp
client.initialize();
